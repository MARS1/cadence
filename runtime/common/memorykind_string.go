// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindAddressValue-1]
	_ = x[MemoryKindStringValue-2]
	_ = x[MemoryKindCharacterValue-3]
	_ = x[MemoryKindNumberValue-4]
	_ = x[MemoryKindArrayValueBase-5]
	_ = x[MemoryKindDictionaryValueBase-6]
	_ = x[MemoryKindCompositeValueBase-7]
	_ = x[MemoryKindSimpleCompositeValueBase-8]
	_ = x[MemoryKindOptionalValue-9]
	_ = x[MemoryKindTypeValue-10]
	_ = x[MemoryKindPathValue-11]
	_ = x[MemoryKindStorageCapabilityValue-12]
	_ = x[MemoryKindPathLinkValue-13]
	_ = x[MemoryKindAccountLinkValue-14]
	_ = x[MemoryKindStorageReferenceValue-15]
	_ = x[MemoryKindAccountReferenceValue-16]
	_ = x[MemoryKindEphemeralReferenceValue-17]
	_ = x[MemoryKindInterpretedFunctionValue-18]
	_ = x[MemoryKindHostFunctionValue-19]
	_ = x[MemoryKindBoundFunctionValue-20]
	_ = x[MemoryKindBigInt-21]
	_ = x[MemoryKindSimpleCompositeValue-22]
	_ = x[MemoryKindPublishedValue-23]
	_ = x[MemoryKindAtreeArrayDataSlab-24]
	_ = x[MemoryKindAtreeArrayMetaDataSlab-25]
	_ = x[MemoryKindAtreeArrayElementOverhead-26]
	_ = x[MemoryKindAtreeMapDataSlab-27]
	_ = x[MemoryKindAtreeMapMetaDataSlab-28]
	_ = x[MemoryKindAtreeMapElementOverhead-29]
	_ = x[MemoryKindAtreeMapPreAllocatedElement-30]
	_ = x[MemoryKindAtreeEncodedSlab-31]
	_ = x[MemoryKindPrimitiveStaticType-32]
	_ = x[MemoryKindCompositeStaticType-33]
	_ = x[MemoryKindInterfaceStaticType-34]
	_ = x[MemoryKindVariableSizedStaticType-35]
	_ = x[MemoryKindConstantSizedStaticType-36]
	_ = x[MemoryKindDictionaryStaticType-37]
	_ = x[MemoryKindOptionalStaticType-38]
	_ = x[MemoryKindRestrictedStaticType-39]
	_ = x[MemoryKindUnauthorizedStaticAccess-40]
	_ = x[MemoryKindEntitlementSetStaticAccess-41]
	_ = x[MemoryKindEntitlementMapStaticAccess-42]
	_ = x[MemoryKindReferenceStaticType-43]
	_ = x[MemoryKindCapabilityStaticType-44]
	_ = x[MemoryKindFunctionStaticType-45]
	_ = x[MemoryKindCadenceVoidValue-46]
	_ = x[MemoryKindCadenceOptionalValue-47]
	_ = x[MemoryKindCadenceBoolValue-48]
	_ = x[MemoryKindCadenceStringValue-49]
	_ = x[MemoryKindCadenceCharacterValue-50]
	_ = x[MemoryKindCadenceAddressValue-51]
	_ = x[MemoryKindCadenceIntValue-52]
	_ = x[MemoryKindCadenceNumberValue-53]
	_ = x[MemoryKindCadenceArrayValueBase-54]
	_ = x[MemoryKindCadenceArrayValueLength-55]
	_ = x[MemoryKindCadenceDictionaryValue-56]
	_ = x[MemoryKindCadenceKeyValuePair-57]
	_ = x[MemoryKindCadenceStructValueBase-58]
	_ = x[MemoryKindCadenceStructValueSize-59]
	_ = x[MemoryKindCadenceResourceValueBase-60]
	_ = x[MemoryKindCadenceAttachmentValueBase-61]
	_ = x[MemoryKindCadenceResourceValueSize-62]
	_ = x[MemoryKindCadenceAttachmentValueSize-63]
	_ = x[MemoryKindCadenceEventValueBase-64]
	_ = x[MemoryKindCadenceEventValueSize-65]
	_ = x[MemoryKindCadenceContractValueBase-66]
	_ = x[MemoryKindCadenceContractValueSize-67]
	_ = x[MemoryKindCadenceEnumValueBase-68]
	_ = x[MemoryKindCadenceEnumValueSize-69]
	_ = x[MemoryKindCadencePathLinkValue-70]
	_ = x[MemoryKindCadenceAccountLinkValue-71]
	_ = x[MemoryKindCadencePathValue-72]
	_ = x[MemoryKindCadenceTypeValue-73]
	_ = x[MemoryKindCadenceStorageCapabilityValue-74]
	_ = x[MemoryKindCadenceFunctionValue-75]
	_ = x[MemoryKindCadenceOptionalType-76]
	_ = x[MemoryKindCadenceVariableSizedArrayType-77]
	_ = x[MemoryKindCadenceConstantSizedArrayType-78]
	_ = x[MemoryKindCadenceDictionaryType-79]
	_ = x[MemoryKindCadenceField-80]
	_ = x[MemoryKindCadenceParameter-81]
	_ = x[MemoryKindCadenceTypeParameter-82]
	_ = x[MemoryKindCadenceStructType-83]
	_ = x[MemoryKindCadenceResourceType-84]
	_ = x[MemoryKindCadenceAttachmentType-85]
	_ = x[MemoryKindCadenceEventType-86]
	_ = x[MemoryKindCadenceContractType-87]
	_ = x[MemoryKindCadenceStructInterfaceType-88]
	_ = x[MemoryKindCadenceResourceInterfaceType-89]
	_ = x[MemoryKindCadenceContractInterfaceType-90]
	_ = x[MemoryKindCadenceFunctionType-91]
	_ = x[MemoryKindCadenceEntitlementSetAccess-92]
	_ = x[MemoryKindCadenceEntitlementMapAccess-93]
	_ = x[MemoryKindCadenceReferenceType-94]
	_ = x[MemoryKindCadenceRestrictedType-95]
	_ = x[MemoryKindCadenceCapabilityType-96]
	_ = x[MemoryKindCadenceEnumType-97]
	_ = x[MemoryKindRawString-98]
	_ = x[MemoryKindAddressLocation-99]
	_ = x[MemoryKindBytes-100]
	_ = x[MemoryKindVariable-101]
	_ = x[MemoryKindCompositeTypeInfo-102]
	_ = x[MemoryKindCompositeField-103]
	_ = x[MemoryKindInvocation-104]
	_ = x[MemoryKindStorageMap-105]
	_ = x[MemoryKindStorageKey-106]
	_ = x[MemoryKindTypeToken-107]
	_ = x[MemoryKindErrorToken-108]
	_ = x[MemoryKindSpaceToken-109]
	_ = x[MemoryKindProgram-110]
	_ = x[MemoryKindIdentifier-111]
	_ = x[MemoryKindArgument-112]
	_ = x[MemoryKindBlock-113]
	_ = x[MemoryKindFunctionBlock-114]
	_ = x[MemoryKindParameter-115]
	_ = x[MemoryKindParameterList-116]
	_ = x[MemoryKindTypeParameter-117]
	_ = x[MemoryKindTypeParameterList-118]
	_ = x[MemoryKindTransfer-119]
	_ = x[MemoryKindMembers-120]
	_ = x[MemoryKindTypeAnnotation-121]
	_ = x[MemoryKindDictionaryEntry-122]
	_ = x[MemoryKindFunctionDeclaration-123]
	_ = x[MemoryKindCompositeDeclaration-124]
	_ = x[MemoryKindAttachmentDeclaration-125]
	_ = x[MemoryKindInterfaceDeclaration-126]
	_ = x[MemoryKindEntitlementDeclaration-127]
	_ = x[MemoryKindEntitlementMappingElement-128]
	_ = x[MemoryKindEntitlementMappingDeclaration-129]
	_ = x[MemoryKindEnumCaseDeclaration-130]
	_ = x[MemoryKindFieldDeclaration-131]
	_ = x[MemoryKindTransactionDeclaration-132]
	_ = x[MemoryKindImportDeclaration-133]
	_ = x[MemoryKindVariableDeclaration-134]
	_ = x[MemoryKindSpecialFunctionDeclaration-135]
	_ = x[MemoryKindPragmaDeclaration-136]
	_ = x[MemoryKindAssignmentStatement-137]
	_ = x[MemoryKindBreakStatement-138]
	_ = x[MemoryKindContinueStatement-139]
	_ = x[MemoryKindEmitStatement-140]
	_ = x[MemoryKindExpressionStatement-141]
	_ = x[MemoryKindForStatement-142]
	_ = x[MemoryKindIfStatement-143]
	_ = x[MemoryKindReturnStatement-144]
	_ = x[MemoryKindSwapStatement-145]
	_ = x[MemoryKindSwitchStatement-146]
	_ = x[MemoryKindWhileStatement-147]
	_ = x[MemoryKindRemoveStatement-148]
	_ = x[MemoryKindBooleanExpression-149]
	_ = x[MemoryKindVoidExpression-150]
	_ = x[MemoryKindNilExpression-151]
	_ = x[MemoryKindStringExpression-152]
	_ = x[MemoryKindIntegerExpression-153]
	_ = x[MemoryKindFixedPointExpression-154]
	_ = x[MemoryKindArrayExpression-155]
	_ = x[MemoryKindDictionaryExpression-156]
	_ = x[MemoryKindIdentifierExpression-157]
	_ = x[MemoryKindInvocationExpression-158]
	_ = x[MemoryKindMemberExpression-159]
	_ = x[MemoryKindIndexExpression-160]
	_ = x[MemoryKindConditionalExpression-161]
	_ = x[MemoryKindUnaryExpression-162]
	_ = x[MemoryKindBinaryExpression-163]
	_ = x[MemoryKindFunctionExpression-164]
	_ = x[MemoryKindCastingExpression-165]
	_ = x[MemoryKindCreateExpression-166]
	_ = x[MemoryKindDestroyExpression-167]
	_ = x[MemoryKindReferenceExpression-168]
	_ = x[MemoryKindForceExpression-169]
	_ = x[MemoryKindPathExpression-170]
	_ = x[MemoryKindAttachExpression-171]
	_ = x[MemoryKindConstantSizedType-172]
	_ = x[MemoryKindDictionaryType-173]
	_ = x[MemoryKindFunctionType-174]
	_ = x[MemoryKindInstantiationType-175]
	_ = x[MemoryKindNominalType-176]
	_ = x[MemoryKindOptionalType-177]
	_ = x[MemoryKindReferenceType-178]
	_ = x[MemoryKindRestrictedType-179]
	_ = x[MemoryKindVariableSizedType-180]
	_ = x[MemoryKindPosition-181]
	_ = x[MemoryKindRange-182]
	_ = x[MemoryKindElaboration-183]
	_ = x[MemoryKindActivation-184]
	_ = x[MemoryKindActivationEntries-185]
	_ = x[MemoryKindVariableSizedSemaType-186]
	_ = x[MemoryKindConstantSizedSemaType-187]
	_ = x[MemoryKindDictionarySemaType-188]
	_ = x[MemoryKindOptionalSemaType-189]
	_ = x[MemoryKindRestrictedSemaType-190]
	_ = x[MemoryKindReferenceSemaType-191]
	_ = x[MemoryKindEntitlementSemaType-192]
	_ = x[MemoryKindEntitlementMapSemaType-193]
	_ = x[MemoryKindCapabilitySemaType-194]
	_ = x[MemoryKindOrderedMap-195]
	_ = x[MemoryKindOrderedMapEntryList-196]
	_ = x[MemoryKindOrderedMapEntry-197]
	_ = x[MemoryKindLast-198]
}

const _MemoryKind_name = "UnknownAddressValueStringValueCharacterValueNumberValueArrayValueBaseDictionaryValueBaseCompositeValueBaseSimpleCompositeValueBaseOptionalValueTypeValuePathValueStorageCapabilityValuePathLinkValueAccountLinkValueStorageReferenceValueAccountReferenceValueEphemeralReferenceValueInterpretedFunctionValueHostFunctionValueBoundFunctionValueBigIntSimpleCompositeValuePublishedValueAtreeArrayDataSlabAtreeArrayMetaDataSlabAtreeArrayElementOverheadAtreeMapDataSlabAtreeMapMetaDataSlabAtreeMapElementOverheadAtreeMapPreAllocatedElementAtreeEncodedSlabPrimitiveStaticTypeCompositeStaticTypeInterfaceStaticTypeVariableSizedStaticTypeConstantSizedStaticTypeDictionaryStaticTypeOptionalStaticTypeRestrictedStaticTypeUnauthorizedStaticAccessEntitlementSetStaticAccessEntitlementMapStaticAccessReferenceStaticTypeCapabilityStaticTypeFunctionStaticTypeCadenceVoidValueCadenceOptionalValueCadenceBoolValueCadenceStringValueCadenceCharacterValueCadenceAddressValueCadenceIntValueCadenceNumberValueCadenceArrayValueBaseCadenceArrayValueLengthCadenceDictionaryValueCadenceKeyValuePairCadenceStructValueBaseCadenceStructValueSizeCadenceResourceValueBaseCadenceAttachmentValueBaseCadenceResourceValueSizeCadenceAttachmentValueSizeCadenceEventValueBaseCadenceEventValueSizeCadenceContractValueBaseCadenceContractValueSizeCadenceEnumValueBaseCadenceEnumValueSizeCadencePathLinkValueCadenceAccountLinkValueCadencePathValueCadenceTypeValueCadenceStorageCapabilityValueCadenceFunctionValueCadenceOptionalTypeCadenceVariableSizedArrayTypeCadenceConstantSizedArrayTypeCadenceDictionaryTypeCadenceFieldCadenceParameterCadenceTypeParameterCadenceStructTypeCadenceResourceTypeCadenceAttachmentTypeCadenceEventTypeCadenceContractTypeCadenceStructInterfaceTypeCadenceResourceInterfaceTypeCadenceContractInterfaceTypeCadenceFunctionTypeCadenceEntitlementSetAccessCadenceEntitlementMapAccessCadenceReferenceTypeCadenceRestrictedTypeCadenceCapabilityTypeCadenceEnumTypeRawStringAddressLocationBytesVariableCompositeTypeInfoCompositeFieldInvocationStorageMapStorageKeyTypeTokenErrorTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTypeParameterTypeParameterListTransferMembersTypeAnnotationDictionaryEntryFunctionDeclarationCompositeDeclarationAttachmentDeclarationInterfaceDeclarationEntitlementDeclarationEntitlementMappingElementEntitlementMappingDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementRemoveStatementBooleanExpressionVoidExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionAttachExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypePositionRangeElaborationActivationActivationEntriesVariableSizedSemaTypeConstantSizedSemaTypeDictionarySemaTypeOptionalSemaTypeRestrictedSemaTypeReferenceSemaTypeEntitlementSemaTypeEntitlementMapSemaTypeCapabilitySemaTypeOrderedMapOrderedMapEntryListOrderedMapEntryLast"

var _MemoryKind_index = [...]uint16{0, 7, 19, 30, 44, 55, 69, 88, 106, 130, 143, 152, 161, 183, 196, 212, 233, 254, 277, 301, 318, 336, 342, 362, 376, 394, 416, 441, 457, 477, 500, 527, 543, 562, 581, 600, 623, 646, 666, 684, 704, 728, 754, 780, 799, 819, 837, 853, 873, 889, 907, 928, 947, 962, 980, 1001, 1024, 1046, 1065, 1087, 1109, 1133, 1159, 1183, 1209, 1230, 1251, 1275, 1299, 1319, 1339, 1359, 1382, 1398, 1414, 1443, 1463, 1482, 1511, 1540, 1561, 1573, 1589, 1609, 1626, 1645, 1666, 1682, 1701, 1727, 1755, 1783, 1802, 1829, 1856, 1876, 1897, 1918, 1933, 1942, 1957, 1962, 1970, 1987, 2001, 2011, 2021, 2031, 2040, 2050, 2060, 2067, 2077, 2085, 2090, 2103, 2112, 2125, 2138, 2155, 2163, 2170, 2184, 2199, 2218, 2238, 2259, 2279, 2301, 2326, 2355, 2374, 2390, 2412, 2429, 2448, 2474, 2491, 2510, 2524, 2541, 2554, 2573, 2585, 2596, 2611, 2624, 2639, 2653, 2668, 2685, 2699, 2712, 2728, 2745, 2765, 2780, 2800, 2820, 2840, 2856, 2871, 2892, 2907, 2923, 2941, 2958, 2974, 2991, 3010, 3025, 3039, 3055, 3072, 3086, 3098, 3115, 3126, 3138, 3151, 3165, 3182, 3190, 3195, 3206, 3216, 3233, 3254, 3275, 3293, 3309, 3327, 3344, 3363, 3385, 3403, 3413, 3432, 3447, 3451}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
