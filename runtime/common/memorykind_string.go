// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindAddressValue-1]
	_ = x[MemoryKindStringValue-2]
	_ = x[MemoryKindCharacterValue-3]
	_ = x[MemoryKindNumberValue-4]
	_ = x[MemoryKindArrayValueBase-5]
	_ = x[MemoryKindDictionaryValueBase-6]
	_ = x[MemoryKindCompositeValueBase-7]
	_ = x[MemoryKindSimpleCompositeValueBase-8]
	_ = x[MemoryKindOptionalValue-9]
	_ = x[MemoryKindTypeValue-10]
	_ = x[MemoryKindPathValue-11]
	_ = x[MemoryKindIDCapabilityValue-12]
	_ = x[MemoryKindPathCapabilityValue-13]
	_ = x[MemoryKindPathLinkValue-14]
	_ = x[MemoryKindAccountLinkValue-15]
	_ = x[MemoryKindStorageReferenceValue-16]
	_ = x[MemoryKindAccountReferenceValue-17]
	_ = x[MemoryKindEphemeralReferenceValue-18]
	_ = x[MemoryKindInterpretedFunctionValue-19]
	_ = x[MemoryKindHostFunctionValue-20]
	_ = x[MemoryKindBoundFunctionValue-21]
	_ = x[MemoryKindBigInt-22]
	_ = x[MemoryKindSimpleCompositeValue-23]
	_ = x[MemoryKindPublishedValue-24]
	_ = x[MemoryKindStorageCapabilityControllerValue-25]
	_ = x[MemoryKindAccountCapabilityControllerValue-26]
	_ = x[MemoryKindAtreeArrayDataSlab-27]
	_ = x[MemoryKindAtreeArrayMetaDataSlab-28]
	_ = x[MemoryKindAtreeArrayElementOverhead-29]
	_ = x[MemoryKindAtreeMapDataSlab-30]
	_ = x[MemoryKindAtreeMapMetaDataSlab-31]
	_ = x[MemoryKindAtreeMapElementOverhead-32]
	_ = x[MemoryKindAtreeMapPreAllocatedElement-33]
	_ = x[MemoryKindAtreeEncodedSlab-34]
	_ = x[MemoryKindPrimitiveStaticType-35]
	_ = x[MemoryKindCompositeStaticType-36]
	_ = x[MemoryKindInterfaceStaticType-37]
	_ = x[MemoryKindVariableSizedStaticType-38]
	_ = x[MemoryKindConstantSizedStaticType-39]
	_ = x[MemoryKindDictionaryStaticType-40]
	_ = x[MemoryKindOptionalStaticType-41]
	_ = x[MemoryKindIntersectionStaticType-42]
	_ = x[MemoryKindEntitlementSetStaticAccess-43]
	_ = x[MemoryKindEntitlementMapStaticAccess-44]
	_ = x[MemoryKindReferenceStaticType-45]
	_ = x[MemoryKindCapabilityStaticType-46]
	_ = x[MemoryKindFunctionStaticType-47]
	_ = x[MemoryKindCadenceVoidValue-48]
	_ = x[MemoryKindCadenceOptionalValue-49]
	_ = x[MemoryKindCadenceBoolValue-50]
	_ = x[MemoryKindCadenceStringValue-51]
	_ = x[MemoryKindCadenceCharacterValue-52]
	_ = x[MemoryKindCadenceAddressValue-53]
	_ = x[MemoryKindCadenceIntValue-54]
	_ = x[MemoryKindCadenceNumberValue-55]
	_ = x[MemoryKindCadenceArrayValueBase-56]
	_ = x[MemoryKindCadenceArrayValueLength-57]
	_ = x[MemoryKindCadenceDictionaryValue-58]
	_ = x[MemoryKindCadenceKeyValuePair-59]
	_ = x[MemoryKindCadenceStructValueBase-60]
	_ = x[MemoryKindCadenceStructValueSize-61]
	_ = x[MemoryKindCadenceResourceValueBase-62]
	_ = x[MemoryKindCadenceAttachmentValueBase-63]
	_ = x[MemoryKindCadenceResourceValueSize-64]
	_ = x[MemoryKindCadenceAttachmentValueSize-65]
	_ = x[MemoryKindCadenceEventValueBase-66]
	_ = x[MemoryKindCadenceEventValueSize-67]
	_ = x[MemoryKindCadenceContractValueBase-68]
	_ = x[MemoryKindCadenceContractValueSize-69]
	_ = x[MemoryKindCadenceEnumValueBase-70]
	_ = x[MemoryKindCadenceEnumValueSize-71]
	_ = x[MemoryKindCadencePathLinkValue-72]
	_ = x[MemoryKindCadenceAccountLinkValue-73]
	_ = x[MemoryKindCadencePathValue-74]
	_ = x[MemoryKindCadenceTypeValue-75]
	_ = x[MemoryKindCadenceIDCapabilityValue-76]
	_ = x[MemoryKindCadencePathCapabilityValue-77]
	_ = x[MemoryKindCadenceFunctionValue-78]
	_ = x[MemoryKindCadenceOptionalType-79]
	_ = x[MemoryKindCadenceVariableSizedArrayType-80]
	_ = x[MemoryKindCadenceConstantSizedArrayType-81]
	_ = x[MemoryKindCadenceDictionaryType-82]
	_ = x[MemoryKindCadenceField-83]
	_ = x[MemoryKindCadenceParameter-84]
	_ = x[MemoryKindCadenceTypeParameter-85]
	_ = x[MemoryKindCadenceStructType-86]
	_ = x[MemoryKindCadenceResourceType-87]
	_ = x[MemoryKindCadenceAttachmentType-88]
	_ = x[MemoryKindCadenceEventType-89]
	_ = x[MemoryKindCadenceContractType-90]
	_ = x[MemoryKindCadenceStructInterfaceType-91]
	_ = x[MemoryKindCadenceResourceInterfaceType-92]
	_ = x[MemoryKindCadenceContractInterfaceType-93]
	_ = x[MemoryKindCadenceFunctionType-94]
	_ = x[MemoryKindCadenceEntitlementSetAccess-95]
	_ = x[MemoryKindCadenceEntitlementMapAccess-96]
	_ = x[MemoryKindCadenceReferenceType-97]
	_ = x[MemoryKindCadenceIntersectionType-98]
	_ = x[MemoryKindCadenceCapabilityType-99]
	_ = x[MemoryKindCadenceEnumType-100]
	_ = x[MemoryKindRawString-101]
	_ = x[MemoryKindAddressLocation-102]
	_ = x[MemoryKindBytes-103]
	_ = x[MemoryKindVariable-104]
	_ = x[MemoryKindCompositeTypeInfo-105]
	_ = x[MemoryKindCompositeField-106]
	_ = x[MemoryKindInvocation-107]
	_ = x[MemoryKindStorageMap-108]
	_ = x[MemoryKindStorageKey-109]
	_ = x[MemoryKindTypeToken-110]
	_ = x[MemoryKindErrorToken-111]
	_ = x[MemoryKindSpaceToken-112]
	_ = x[MemoryKindProgram-113]
	_ = x[MemoryKindIdentifier-114]
	_ = x[MemoryKindArgument-115]
	_ = x[MemoryKindBlock-116]
	_ = x[MemoryKindFunctionBlock-117]
	_ = x[MemoryKindParameter-118]
	_ = x[MemoryKindParameterList-119]
	_ = x[MemoryKindTypeParameter-120]
	_ = x[MemoryKindTypeParameterList-121]
	_ = x[MemoryKindTransfer-122]
	_ = x[MemoryKindMembers-123]
	_ = x[MemoryKindTypeAnnotation-124]
	_ = x[MemoryKindDictionaryEntry-125]
	_ = x[MemoryKindFunctionDeclaration-126]
	_ = x[MemoryKindCompositeDeclaration-127]
	_ = x[MemoryKindAttachmentDeclaration-128]
	_ = x[MemoryKindInterfaceDeclaration-129]
	_ = x[MemoryKindEntitlementDeclaration-130]
	_ = x[MemoryKindEntitlementMappingElement-131]
	_ = x[MemoryKindEntitlementMappingDeclaration-132]
	_ = x[MemoryKindEnumCaseDeclaration-133]
	_ = x[MemoryKindFieldDeclaration-134]
	_ = x[MemoryKindTransactionDeclaration-135]
	_ = x[MemoryKindImportDeclaration-136]
	_ = x[MemoryKindVariableDeclaration-137]
	_ = x[MemoryKindSpecialFunctionDeclaration-138]
	_ = x[MemoryKindPragmaDeclaration-139]
	_ = x[MemoryKindAssignmentStatement-140]
	_ = x[MemoryKindBreakStatement-141]
	_ = x[MemoryKindContinueStatement-142]
	_ = x[MemoryKindEmitStatement-143]
	_ = x[MemoryKindExpressionStatement-144]
	_ = x[MemoryKindForStatement-145]
	_ = x[MemoryKindIfStatement-146]
	_ = x[MemoryKindReturnStatement-147]
	_ = x[MemoryKindSwapStatement-148]
	_ = x[MemoryKindSwitchStatement-149]
	_ = x[MemoryKindWhileStatement-150]
	_ = x[MemoryKindRemoveStatement-151]
	_ = x[MemoryKindBooleanExpression-152]
	_ = x[MemoryKindVoidExpression-153]
	_ = x[MemoryKindNilExpression-154]
	_ = x[MemoryKindStringExpression-155]
	_ = x[MemoryKindIntegerExpression-156]
	_ = x[MemoryKindFixedPointExpression-157]
	_ = x[MemoryKindArrayExpression-158]
	_ = x[MemoryKindDictionaryExpression-159]
	_ = x[MemoryKindIdentifierExpression-160]
	_ = x[MemoryKindInvocationExpression-161]
	_ = x[MemoryKindMemberExpression-162]
	_ = x[MemoryKindIndexExpression-163]
	_ = x[MemoryKindConditionalExpression-164]
	_ = x[MemoryKindUnaryExpression-165]
	_ = x[MemoryKindBinaryExpression-166]
	_ = x[MemoryKindFunctionExpression-167]
	_ = x[MemoryKindCastingExpression-168]
	_ = x[MemoryKindCreateExpression-169]
	_ = x[MemoryKindDestroyExpression-170]
	_ = x[MemoryKindReferenceExpression-171]
	_ = x[MemoryKindForceExpression-172]
	_ = x[MemoryKindPathExpression-173]
	_ = x[MemoryKindAttachExpression-174]
	_ = x[MemoryKindConstantSizedType-175]
	_ = x[MemoryKindDictionaryType-176]
	_ = x[MemoryKindFunctionType-177]
	_ = x[MemoryKindInstantiationType-178]
	_ = x[MemoryKindNominalType-179]
	_ = x[MemoryKindOptionalType-180]
	_ = x[MemoryKindReferenceType-181]
	_ = x[MemoryKindIntersectionType-182]
	_ = x[MemoryKindVariableSizedType-183]
	_ = x[MemoryKindPosition-184]
	_ = x[MemoryKindRange-185]
	_ = x[MemoryKindElaboration-186]
	_ = x[MemoryKindActivation-187]
	_ = x[MemoryKindActivationEntries-188]
	_ = x[MemoryKindVariableSizedSemaType-189]
	_ = x[MemoryKindConstantSizedSemaType-190]
	_ = x[MemoryKindDictionarySemaType-191]
	_ = x[MemoryKindOptionalSemaType-192]
	_ = x[MemoryKindIntersectionSemaType-193]
	_ = x[MemoryKindReferenceSemaType-194]
	_ = x[MemoryKindEntitlementSemaType-195]
	_ = x[MemoryKindEntitlementMapSemaType-196]
	_ = x[MemoryKindCapabilitySemaType-197]
	_ = x[MemoryKindOrderedMap-198]
	_ = x[MemoryKindOrderedMapEntryList-199]
	_ = x[MemoryKindOrderedMapEntry-200]
	_ = x[MemoryKindLast-201]
}

const _MemoryKind_name = "UnknownAddressValueStringValueCharacterValueNumberValueArrayValueBaseDictionaryValueBaseCompositeValueBaseSimpleCompositeValueBaseOptionalValueTypeValuePathValueIDCapabilityValuePathCapabilityValuePathLinkValueAccountLinkValueStorageReferenceValueAccountReferenceValueEphemeralReferenceValueInterpretedFunctionValueHostFunctionValueBoundFunctionValueBigIntSimpleCompositeValuePublishedValueStorageCapabilityControllerValueAccountCapabilityControllerValueAtreeArrayDataSlabAtreeArrayMetaDataSlabAtreeArrayElementOverheadAtreeMapDataSlabAtreeMapMetaDataSlabAtreeMapElementOverheadAtreeMapPreAllocatedElementAtreeEncodedSlabPrimitiveStaticTypeCompositeStaticTypeInterfaceStaticTypeVariableSizedStaticTypeConstantSizedStaticTypeDictionaryStaticTypeOptionalStaticTypeIntersectionStaticTypeEntitlementSetStaticAccessEntitlementMapStaticAccessReferenceStaticTypeCapabilityStaticTypeFunctionStaticTypeCadenceVoidValueCadenceOptionalValueCadenceBoolValueCadenceStringValueCadenceCharacterValueCadenceAddressValueCadenceIntValueCadenceNumberValueCadenceArrayValueBaseCadenceArrayValueLengthCadenceDictionaryValueCadenceKeyValuePairCadenceStructValueBaseCadenceStructValueSizeCadenceResourceValueBaseCadenceAttachmentValueBaseCadenceResourceValueSizeCadenceAttachmentValueSizeCadenceEventValueBaseCadenceEventValueSizeCadenceContractValueBaseCadenceContractValueSizeCadenceEnumValueBaseCadenceEnumValueSizeCadencePathLinkValueCadenceAccountLinkValueCadencePathValueCadenceTypeValueCadenceIDCapabilityValueCadencePathCapabilityValueCadenceFunctionValueCadenceOptionalTypeCadenceVariableSizedArrayTypeCadenceConstantSizedArrayTypeCadenceDictionaryTypeCadenceFieldCadenceParameterCadenceTypeParameterCadenceStructTypeCadenceResourceTypeCadenceAttachmentTypeCadenceEventTypeCadenceContractTypeCadenceStructInterfaceTypeCadenceResourceInterfaceTypeCadenceContractInterfaceTypeCadenceFunctionTypeCadenceEntitlementSetAccessCadenceEntitlementMapAccessCadenceReferenceTypeCadenceIntersectionTypeCadenceCapabilityTypeCadenceEnumTypeRawStringAddressLocationBytesVariableCompositeTypeInfoCompositeFieldInvocationStorageMapStorageKeyTypeTokenErrorTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTypeParameterTypeParameterListTransferMembersTypeAnnotationDictionaryEntryFunctionDeclarationCompositeDeclarationAttachmentDeclarationInterfaceDeclarationEntitlementDeclarationEntitlementMappingElementEntitlementMappingDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementRemoveStatementBooleanExpressionVoidExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionAttachExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeIntersectionTypeVariableSizedTypePositionRangeElaborationActivationActivationEntriesVariableSizedSemaTypeConstantSizedSemaTypeDictionarySemaTypeOptionalSemaTypeIntersectionSemaTypeReferenceSemaTypeEntitlementSemaTypeEntitlementMapSemaTypeCapabilitySemaTypeOrderedMapOrderedMapEntryListOrderedMapEntryLast"

var _MemoryKind_index = [...]uint16{0, 7, 19, 30, 44, 55, 69, 88, 106, 130, 143, 152, 161, 178, 197, 210, 226, 247, 268, 291, 315, 332, 350, 356, 376, 390, 422, 454, 472, 494, 519, 535, 555, 578, 605, 621, 640, 659, 678, 701, 724, 744, 762, 784, 810, 836, 855, 875, 893, 909, 929, 945, 963, 984, 1003, 1018, 1036, 1057, 1080, 1102, 1121, 1143, 1165, 1189, 1215, 1239, 1265, 1286, 1307, 1331, 1355, 1375, 1395, 1415, 1438, 1454, 1470, 1494, 1520, 1540, 1559, 1588, 1617, 1638, 1650, 1666, 1686, 1703, 1722, 1743, 1759, 1778, 1804, 1832, 1860, 1879, 1906, 1933, 1953, 1976, 1997, 2012, 2021, 2036, 2041, 2049, 2066, 2080, 2090, 2100, 2110, 2119, 2129, 2139, 2146, 2156, 2164, 2169, 2182, 2191, 2204, 2217, 2234, 2242, 2249, 2263, 2278, 2297, 2317, 2338, 2358, 2380, 2405, 2434, 2453, 2469, 2491, 2508, 2527, 2553, 2570, 2589, 2603, 2620, 2633, 2652, 2664, 2675, 2690, 2703, 2718, 2732, 2747, 2764, 2778, 2791, 2807, 2824, 2844, 2859, 2879, 2899, 2919, 2935, 2950, 2971, 2986, 3002, 3020, 3037, 3053, 3070, 3089, 3104, 3118, 3134, 3151, 3165, 3177, 3194, 3205, 3217, 3230, 3246, 3263, 3271, 3276, 3287, 3297, 3314, 3335, 3356, 3374, 3390, 3410, 3427, 3446, 3468, 3486, 3496, 3515, 3530, 3534}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
