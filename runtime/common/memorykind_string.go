// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindAddressValue-1]
	_ = x[MemoryKindStringValue-2]
	_ = x[MemoryKindCharacterValue-3]
	_ = x[MemoryKindNumberValue-4]
	_ = x[MemoryKindArrayValueBase-5]
	_ = x[MemoryKindDictionaryValueBase-6]
	_ = x[MemoryKindCompositeValueBase-7]
	_ = x[MemoryKindSimpleCompositeValueBase-8]
	_ = x[MemoryKindOptionalValue-9]
	_ = x[MemoryKindTypeValue-10]
	_ = x[MemoryKindPathValue-11]
	_ = x[MemoryKindIDCapabilityValue-12]
	_ = x[MemoryKindPathCapabilityValue-13]
	_ = x[MemoryKindPathLinkValue-14]
	_ = x[MemoryKindAccountLinkValue-15]
	_ = x[MemoryKindStorageReferenceValue-16]
	_ = x[MemoryKindAccountReferenceValue-17]
	_ = x[MemoryKindEphemeralReferenceValue-18]
	_ = x[MemoryKindInterpretedFunctionValue-19]
	_ = x[MemoryKindHostFunctionValue-20]
	_ = x[MemoryKindBoundFunctionValue-21]
	_ = x[MemoryKindBigInt-22]
	_ = x[MemoryKindSimpleCompositeValue-23]
	_ = x[MemoryKindPublishedValue-24]
	_ = x[MemoryKindStorageCapabilityControllerValue-25]
	_ = x[MemoryKindAccountCapabilityControllerValue-26]
	_ = x[MemoryKindAtreeArrayDataSlab-27]
	_ = x[MemoryKindAtreeArrayMetaDataSlab-28]
	_ = x[MemoryKindAtreeArrayElementOverhead-29]
	_ = x[MemoryKindAtreeMapDataSlab-30]
	_ = x[MemoryKindAtreeMapMetaDataSlab-31]
	_ = x[MemoryKindAtreeMapElementOverhead-32]
	_ = x[MemoryKindAtreeMapPreAllocatedElement-33]
	_ = x[MemoryKindAtreeEncodedSlab-34]
	_ = x[MemoryKindPrimitiveStaticType-35]
	_ = x[MemoryKindCompositeStaticType-36]
	_ = x[MemoryKindInterfaceStaticType-37]
	_ = x[MemoryKindVariableSizedStaticType-38]
	_ = x[MemoryKindConstantSizedStaticType-39]
	_ = x[MemoryKindDictionaryStaticType-40]
	_ = x[MemoryKindOptionalStaticType-41]
	_ = x[MemoryKindRestrictedStaticType-42]
	_ = x[MemoryKindUnauthorizedStaticAccess-43]
	_ = x[MemoryKindEntitlementSetStaticAccess-44]
	_ = x[MemoryKindEntitlementMapStaticAccess-45]
	_ = x[MemoryKindReferenceStaticType-46]
	_ = x[MemoryKindCapabilityStaticType-47]
	_ = x[MemoryKindFunctionStaticType-48]
	_ = x[MemoryKindCadenceVoidValue-49]
	_ = x[MemoryKindCadenceOptionalValue-50]
	_ = x[MemoryKindCadenceBoolValue-51]
	_ = x[MemoryKindCadenceStringValue-52]
	_ = x[MemoryKindCadenceCharacterValue-53]
	_ = x[MemoryKindCadenceAddressValue-54]
	_ = x[MemoryKindCadenceIntValue-55]
	_ = x[MemoryKindCadenceNumberValue-56]
	_ = x[MemoryKindCadenceArrayValueBase-57]
	_ = x[MemoryKindCadenceArrayValueLength-58]
	_ = x[MemoryKindCadenceDictionaryValue-59]
	_ = x[MemoryKindCadenceKeyValuePair-60]
	_ = x[MemoryKindCadenceStructValueBase-61]
	_ = x[MemoryKindCadenceStructValueSize-62]
	_ = x[MemoryKindCadenceResourceValueBase-63]
	_ = x[MemoryKindCadenceAttachmentValueBase-64]
	_ = x[MemoryKindCadenceResourceValueSize-65]
	_ = x[MemoryKindCadenceAttachmentValueSize-66]
	_ = x[MemoryKindCadenceEventValueBase-67]
	_ = x[MemoryKindCadenceEventValueSize-68]
	_ = x[MemoryKindCadenceContractValueBase-69]
	_ = x[MemoryKindCadenceContractValueSize-70]
	_ = x[MemoryKindCadenceEnumValueBase-71]
	_ = x[MemoryKindCadenceEnumValueSize-72]
	_ = x[MemoryKindCadencePathLinkValue-73]
	_ = x[MemoryKindCadenceAccountLinkValue-74]
	_ = x[MemoryKindCadencePathValue-75]
	_ = x[MemoryKindCadenceTypeValue-76]
	_ = x[MemoryKindCadenceIDCapabilityValue-77]
	_ = x[MemoryKindCadencePathCapabilityValue-78]
	_ = x[MemoryKindCadenceFunctionValue-79]
	_ = x[MemoryKindCadenceOptionalType-80]
	_ = x[MemoryKindCadenceVariableSizedArrayType-81]
	_ = x[MemoryKindCadenceConstantSizedArrayType-82]
	_ = x[MemoryKindCadenceDictionaryType-83]
	_ = x[MemoryKindCadenceField-84]
	_ = x[MemoryKindCadenceParameter-85]
	_ = x[MemoryKindCadenceTypeParameter-86]
	_ = x[MemoryKindCadenceStructType-87]
	_ = x[MemoryKindCadenceResourceType-88]
	_ = x[MemoryKindCadenceAttachmentType-89]
	_ = x[MemoryKindCadenceEventType-90]
	_ = x[MemoryKindCadenceContractType-91]
	_ = x[MemoryKindCadenceStructInterfaceType-92]
	_ = x[MemoryKindCadenceResourceInterfaceType-93]
	_ = x[MemoryKindCadenceContractInterfaceType-94]
	_ = x[MemoryKindCadenceFunctionType-95]
	_ = x[MemoryKindCadenceEntitlementSetAccess-96]
	_ = x[MemoryKindCadenceEntitlementMapAccess-97]
	_ = x[MemoryKindCadenceReferenceType-98]
	_ = x[MemoryKindCadenceRestrictedType-99]
	_ = x[MemoryKindCadenceCapabilityType-100]
	_ = x[MemoryKindCadenceEnumType-101]
	_ = x[MemoryKindRawString-102]
	_ = x[MemoryKindAddressLocation-103]
	_ = x[MemoryKindBytes-104]
	_ = x[MemoryKindVariable-105]
	_ = x[MemoryKindCompositeTypeInfo-106]
	_ = x[MemoryKindCompositeField-107]
	_ = x[MemoryKindInvocation-108]
	_ = x[MemoryKindStorageMap-109]
	_ = x[MemoryKindStorageKey-110]
	_ = x[MemoryKindTypeToken-111]
	_ = x[MemoryKindErrorToken-112]
	_ = x[MemoryKindSpaceToken-113]
	_ = x[MemoryKindProgram-114]
	_ = x[MemoryKindIdentifier-115]
	_ = x[MemoryKindArgument-116]
	_ = x[MemoryKindBlock-117]
	_ = x[MemoryKindFunctionBlock-118]
	_ = x[MemoryKindParameter-119]
	_ = x[MemoryKindParameterList-120]
	_ = x[MemoryKindTypeParameter-121]
	_ = x[MemoryKindTypeParameterList-122]
	_ = x[MemoryKindTransfer-123]
	_ = x[MemoryKindMembers-124]
	_ = x[MemoryKindTypeAnnotation-125]
	_ = x[MemoryKindDictionaryEntry-126]
	_ = x[MemoryKindFunctionDeclaration-127]
	_ = x[MemoryKindCompositeDeclaration-128]
	_ = x[MemoryKindAttachmentDeclaration-129]
	_ = x[MemoryKindInterfaceDeclaration-130]
	_ = x[MemoryKindEntitlementDeclaration-131]
	_ = x[MemoryKindEntitlementMappingElement-132]
	_ = x[MemoryKindEntitlementMappingDeclaration-133]
	_ = x[MemoryKindEnumCaseDeclaration-134]
	_ = x[MemoryKindFieldDeclaration-135]
	_ = x[MemoryKindTransactionDeclaration-136]
	_ = x[MemoryKindImportDeclaration-137]
	_ = x[MemoryKindVariableDeclaration-138]
	_ = x[MemoryKindSpecialFunctionDeclaration-139]
	_ = x[MemoryKindPragmaDeclaration-140]
	_ = x[MemoryKindAssignmentStatement-141]
	_ = x[MemoryKindBreakStatement-142]
	_ = x[MemoryKindContinueStatement-143]
	_ = x[MemoryKindEmitStatement-144]
	_ = x[MemoryKindExpressionStatement-145]
	_ = x[MemoryKindForStatement-146]
	_ = x[MemoryKindIfStatement-147]
	_ = x[MemoryKindReturnStatement-148]
	_ = x[MemoryKindSwapStatement-149]
	_ = x[MemoryKindSwitchStatement-150]
	_ = x[MemoryKindWhileStatement-151]
	_ = x[MemoryKindRemoveStatement-152]
	_ = x[MemoryKindBooleanExpression-153]
	_ = x[MemoryKindVoidExpression-154]
	_ = x[MemoryKindNilExpression-155]
	_ = x[MemoryKindStringExpression-156]
	_ = x[MemoryKindIntegerExpression-157]
	_ = x[MemoryKindFixedPointExpression-158]
	_ = x[MemoryKindArrayExpression-159]
	_ = x[MemoryKindDictionaryExpression-160]
	_ = x[MemoryKindIdentifierExpression-161]
	_ = x[MemoryKindInvocationExpression-162]
	_ = x[MemoryKindMemberExpression-163]
	_ = x[MemoryKindIndexExpression-164]
	_ = x[MemoryKindConditionalExpression-165]
	_ = x[MemoryKindUnaryExpression-166]
	_ = x[MemoryKindBinaryExpression-167]
	_ = x[MemoryKindFunctionExpression-168]
	_ = x[MemoryKindCastingExpression-169]
	_ = x[MemoryKindCreateExpression-170]
	_ = x[MemoryKindDestroyExpression-171]
	_ = x[MemoryKindReferenceExpression-172]
	_ = x[MemoryKindForceExpression-173]
	_ = x[MemoryKindPathExpression-174]
	_ = x[MemoryKindAttachExpression-175]
	_ = x[MemoryKindConstantSizedType-176]
	_ = x[MemoryKindDictionaryType-177]
	_ = x[MemoryKindFunctionType-178]
	_ = x[MemoryKindInstantiationType-179]
	_ = x[MemoryKindNominalType-180]
	_ = x[MemoryKindOptionalType-181]
	_ = x[MemoryKindReferenceType-182]
	_ = x[MemoryKindRestrictedType-183]
	_ = x[MemoryKindVariableSizedType-184]
	_ = x[MemoryKindPosition-185]
	_ = x[MemoryKindRange-186]
	_ = x[MemoryKindElaboration-187]
	_ = x[MemoryKindActivation-188]
	_ = x[MemoryKindActivationEntries-189]
	_ = x[MemoryKindVariableSizedSemaType-190]
	_ = x[MemoryKindConstantSizedSemaType-191]
	_ = x[MemoryKindDictionarySemaType-192]
	_ = x[MemoryKindOptionalSemaType-193]
	_ = x[MemoryKindRestrictedSemaType-194]
	_ = x[MemoryKindReferenceSemaType-195]
	_ = x[MemoryKindEntitlementSemaType-196]
	_ = x[MemoryKindEntitlementMapSemaType-197]
	_ = x[MemoryKindCapabilitySemaType-198]
	_ = x[MemoryKindOrderedMap-199]
	_ = x[MemoryKindOrderedMapEntryList-200]
	_ = x[MemoryKindOrderedMapEntry-201]
	_ = x[MemoryKindLast-202]
}

const _MemoryKind_name = "UnknownAddressValueStringValueCharacterValueNumberValueArrayValueBaseDictionaryValueBaseCompositeValueBaseSimpleCompositeValueBaseOptionalValueTypeValuePathValueIDCapabilityValuePathCapabilityValuePathLinkValueAccountLinkValueStorageReferenceValueAccountReferenceValueEphemeralReferenceValueInterpretedFunctionValueHostFunctionValueBoundFunctionValueBigIntSimpleCompositeValuePublishedValueStorageCapabilityControllerValueAccountCapabilityControllerValueAtreeArrayDataSlabAtreeArrayMetaDataSlabAtreeArrayElementOverheadAtreeMapDataSlabAtreeMapMetaDataSlabAtreeMapElementOverheadAtreeMapPreAllocatedElementAtreeEncodedSlabPrimitiveStaticTypeCompositeStaticTypeInterfaceStaticTypeVariableSizedStaticTypeConstantSizedStaticTypeDictionaryStaticTypeOptionalStaticTypeRestrictedStaticTypeUnauthorizedStaticAccessEntitlementSetStaticAccessEntitlementMapStaticAccessReferenceStaticTypeCapabilityStaticTypeFunctionStaticTypeCadenceVoidValueCadenceOptionalValueCadenceBoolValueCadenceStringValueCadenceCharacterValueCadenceAddressValueCadenceIntValueCadenceNumberValueCadenceArrayValueBaseCadenceArrayValueLengthCadenceDictionaryValueCadenceKeyValuePairCadenceStructValueBaseCadenceStructValueSizeCadenceResourceValueBaseCadenceAttachmentValueBaseCadenceResourceValueSizeCadenceAttachmentValueSizeCadenceEventValueBaseCadenceEventValueSizeCadenceContractValueBaseCadenceContractValueSizeCadenceEnumValueBaseCadenceEnumValueSizeCadencePathLinkValueCadenceAccountLinkValueCadencePathValueCadenceTypeValueCadenceIDCapabilityValueCadencePathCapabilityValueCadenceFunctionValueCadenceOptionalTypeCadenceVariableSizedArrayTypeCadenceConstantSizedArrayTypeCadenceDictionaryTypeCadenceFieldCadenceParameterCadenceTypeParameterCadenceStructTypeCadenceResourceTypeCadenceAttachmentTypeCadenceEventTypeCadenceContractTypeCadenceStructInterfaceTypeCadenceResourceInterfaceTypeCadenceContractInterfaceTypeCadenceFunctionTypeCadenceEntitlementSetAccessCadenceEntitlementMapAccessCadenceReferenceTypeCadenceRestrictedTypeCadenceCapabilityTypeCadenceEnumTypeRawStringAddressLocationBytesVariableCompositeTypeInfoCompositeFieldInvocationStorageMapStorageKeyTypeTokenErrorTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTypeParameterTypeParameterListTransferMembersTypeAnnotationDictionaryEntryFunctionDeclarationCompositeDeclarationAttachmentDeclarationInterfaceDeclarationEntitlementDeclarationEntitlementMappingElementEntitlementMappingDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementRemoveStatementBooleanExpressionVoidExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionAttachExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypePositionRangeElaborationActivationActivationEntriesVariableSizedSemaTypeConstantSizedSemaTypeDictionarySemaTypeOptionalSemaTypeRestrictedSemaTypeReferenceSemaTypeEntitlementSemaTypeEntitlementMapSemaTypeCapabilitySemaTypeOrderedMapOrderedMapEntryListOrderedMapEntryLast"

var _MemoryKind_index = [...]uint16{0, 7, 19, 30, 44, 55, 69, 88, 106, 130, 143, 152, 161, 178, 197, 210, 226, 247, 268, 291, 315, 332, 350, 356, 376, 390, 422, 454, 472, 494, 519, 535, 555, 578, 605, 621, 640, 659, 678, 701, 724, 744, 762, 782, 806, 832, 858, 877, 897, 915, 931, 951, 967, 985, 1006, 1025, 1040, 1058, 1079, 1102, 1124, 1143, 1165, 1187, 1211, 1237, 1261, 1287, 1308, 1329, 1353, 1377, 1397, 1417, 1437, 1460, 1476, 1492, 1516, 1542, 1562, 1581, 1610, 1639, 1660, 1672, 1688, 1708, 1725, 1744, 1765, 1781, 1800, 1826, 1854, 1882, 1901, 1928, 1955, 1975, 1996, 2017, 2032, 2041, 2056, 2061, 2069, 2086, 2100, 2110, 2120, 2130, 2139, 2149, 2159, 2166, 2176, 2184, 2189, 2202, 2211, 2224, 2237, 2254, 2262, 2269, 2283, 2298, 2317, 2337, 2358, 2378, 2400, 2425, 2454, 2473, 2489, 2511, 2528, 2547, 2573, 2590, 2609, 2623, 2640, 2653, 2672, 2684, 2695, 2710, 2723, 2738, 2752, 2767, 2784, 2798, 2811, 2827, 2844, 2864, 2879, 2899, 2919, 2939, 2955, 2970, 2991, 3006, 3022, 3040, 3057, 3073, 3090, 3109, 3124, 3138, 3154, 3171, 3185, 3197, 3214, 3225, 3237, 3250, 3264, 3281, 3289, 3294, 3305, 3315, 3332, 3353, 3374, 3392, 3408, 3426, 3443, 3462, 3484, 3502, 3512, 3531, 3546, 3550}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
